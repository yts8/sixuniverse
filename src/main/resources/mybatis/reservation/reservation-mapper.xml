<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yts8.sixuniverse.reservation.repository.ReservationMapper">
  <insert id="reservationInsert" parameterType="ReservationDateDto" useGeneratedKeys="true" keyProperty="reservationId">
    insert into reservation
    values (null, #{roomId}, #{memberId}, #{status}, #{adult}, #{kid}, #{infant}, #{checkIn}, #{checkOut},
            #{createDate}, #{cancelDate}, #{updateTarget})
  </insert>

  <select id="reservationList" parameterType="ReservationDateDto" resultType="ReservationDto">
    select *
    from reservation
    where member_id = #{memberId}
      and status = #{status}
      and update_target is null
    order by check_in
  </select>

  <select id="findById" parameterType="ReservationDateDto" resultType="ReservationDto">
    select *
    from reservation
    where reservation_id = #{reservationId}
  </select>

  <update id="reservationCheckOut">
    update reservation
    set status = 'complete'
    where check_out <![CDATA[ < ]]> #{today}
  </update>

  <update id="guestReservationUpdateRequest">
    update reservation
    set status = 'update'
    where reservation_id = #{reservationId}
  </update>

  <insert id="guestReservationUpdateInsert">
    insert into reservation (room_id, member_id, status, adult, kid, infant, check_in, check_out, update_target)
    values (#{roomId}, #{memberId}, #{status}, #{adult}, #{kid}, #{infant}, #{checkIn}, #{checkOut}, #{reservationId})
  </insert>

  <update id="guestReservationCancel">
    update reservation
    set cancel_date = #{cancelDate},
        status      = #{status}
    where reservation_id = #{reservationId}
  </update>

  <select id="findByUpdateReservationId" resultType="ReservationRoomDto">
    select reservation.reservation_id,
           reservation.room_id,
           reservation.status,
           adult,
           kid,
           infant,
           check_in,
           check_out,
           room.address,
           room.sub_address,
           title,
           m.username,
           p.price
    from reservation
           join room on reservation.room_id = room.room_id
           join member m on room.member_id = m.member_id
           left outer join payment p on reservation.reservation_id = p.reservation_id
    where reservation.update_target = #{reservationId} or reservation.reservation_id = #{reservationId};
  </select>

  <select id="findByCancelReservationId" resultType="ReservationRoomDto">
    select reservation.reservation_id,
           reservation.room_id,
           reservation.status,
           adult,
           kid,
           infant,
           check_in,
           check_out,
           room.address,
           room.sub_address,
           title,
           m.username,
           p.price
    from reservation
           join room on reservation.room_id = room.room_id
           join member m on room.member_id = m.member_id
           join payment p on reservation.reservation_id = p.reservation_id
    where reservation.reservation_id = #{reservationId}
  </select>

</mapper>