<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yts8.sixuniverse.performance.repository.PerformanceMapper">

  <update id="updateSuperHost">
    update member
    set host_grade ='SUPER-HOST'
    where member_id = #{memberId}
  </update>

  <select id="findByReviewScore" resultType="double">
    select ifnull((avg(score_clean) + avg(score_location) + avg(score_service)) / 3, 0)
    from review
           join room on review.room_id = room.room_id
           join member on room.member_id = member.member_id
    where member.member_id = #{memberId}
  </select>

  <select id="findByRoomCount" resultType="int">
    select count(room_id)
    from room
    where member_id = #{memberId}
  </select>

  <select id="findByCancelCount" resultType="double">
    select count(cancel_date) / count(reservation_id)
    from reservation
    where member_id = #{memberId}
  </select>

  <select id="findByReservationCount" resultType="int">
    select count(reservation_date_id)
    from reservation_date
           join reservation on reservation.room_id = reservation_date.room_id
           join room on reservation.member_id = room.member_id
    where room.member_id = #{memberId}
      and room.create_date  <![CDATA[ >= ]]> now() - interval 30 day;
  </select>

  <select id="findByHits" resultType="int">
    select ifnull(sum(hits), 0)
    from room_hits
           join room on room.room_id = room_hits.room_id
    where room.member_id = #{memberId}
      and read_date <![CDATA[ >= ]]> now() - interval 30 day;
  </select>

  <select id="findByHitsList" resultType="int">
    select ifnull(sum(hits), 0)
    from room_hits
           join room on room.room_id = room_hits.room_id
    where read_date = current_date - interval #{interval} day
      and room.member_id = #{memberId};
  </select>

  <select id="findByMonthlyIncome" resultType="int">
    select ifnull(SUM(payment.price - payment.commission), 0)
    from payment
           join reservation on reservation.reservation_id = payment.reservation_id
           join room on reservation.room_id = room.room_id
    where room.member_id = #{memberId}
      and (reservation.status = 'complete')
      and payment.cancel_date is null
      and ((payment.create_date - now()) <![CDATA[ < ]]> 31);
  </select>

  <!--  now자리에 기준년도 1/1 넣어주면됨-->
  <select id="findByYearlyIncome" resultType="int">
    select ifnull(SUM(payment.price - payment.commission), 0)
    from payment
           join reservation on reservation.reservation_id = payment.reservation_id
           join room on reservation.room_id = room.room_id
    where room.member_id = #{memberId}
      and (reservation.status = 'complete')
      and payment.cancel_date is null
      <![CDATA[
      and (now() < payment.create_date < now() + interval 1 year)]]>;
  </select>

  <select id="findByYearlyIncomeCount" resultType="int">
    select count(price)
    from payment
           join reservation on reservation.reservation_id = payment.reservation_id
    where member_id = #{memberId}
      and (reservation.status = 'complete')
      and payment.cancel_date is null
      <![CDATA[
      and (now() < payment.create_date < now() + interval 1 year)
        ]]>;
  </select>

  <select id="findByReservationMonthlyCount" resultType="int">
    select count(reservation_id)
    from reservation
           join room on room.room_id = reservation.room_id
    where room.member_id = #{memberId}
      <![CDATA[
      and (reservation.create_date < now() + interval 30 day)]]>;
  </select>

  <!--  findByMonthlyIncome이랑 합칠지 생각해보기-->
  <select id="monthlyIncomeList" resultType="int">
    SELECT ifnull(sum(payment.price - payment.commission), 0)
    FROM payment
           join reservation on reservation.reservation_id = payment.reservation_id
           join room on reservation.room_id = room.room_id
    where room.member_id = #{memberId}
     <![CDATA[
      and last_day(now() - interval 1 year) + interval (12 - month (now())) month + interval ${interval} month
        < payment.create_date
      and payment.create_date <=
      last_day(now() - interval 1 year) + interval (12 - month (now())) month + interval (1 + ${interval}) month
      and (reservation.status = 'complete')
      and payment.cancel_date is null]]>;
  </select>

  <select id="findBySuperHostIs" resultType="String">
    SELECT host_grade
    FROM member
    where member_id = #{memberId};
  </select>


  <update id="updateSuperHostScheduler" parameterType="String">
    update member
    set host_grade='SUPERHOST'
    where member_id in (select member_id
                        from (select m.member_id
                              from member m
                                     join room on m.member_id = room.member_id
                                     join reservation r on room.room_id = r.room_id
                                     join review r2 on r.reservation_id = r2.reservation_id
                                     join payment p on r.reservation_id = p.reservation_id
                              where r.status = 'complete'
                                and p.cancel_date is null
                                and (now() - p.create_date) <![CDATA[ < 31
                              group by m.member_id
                              having ((avg(r2.score_service) + avg(r2.score_clean) +
                                       avg(r2.score_location)) / 3) > 4.8
                                 and (count(r.cancel_date) / count(r.reservation_id)) < 0.01
                                 and count(room.room_Id) >= 3) as tmp)]]>;
  </update>


</mapper>
